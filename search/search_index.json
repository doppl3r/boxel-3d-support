{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>This is the unofficial modding documentation for Boxel 3D.</p> Notice <p>There may be information in this documentation that is not 100% accurate. I do not do much modding, so if you want anything to be added or removed, let me know over on the Boxel 3D discord server.</p> <p>Notice 2</p> <p>I may not update this that much, I have things to do, so if I don't update it constantly/consistently it is not my fault.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>Control + Shift + I</code> - Open Inspect Element. (Windows)</li> <li><code>Command + Option + I</code> - Open Inspect Element. (Mac)</li> </ul>"},{"location":"about/","title":"Hey, this page isn't done yet.","text":"<p>Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one! Go see another one!</p>"},{"location":"gettingstarted/","title":"Getting started Modding Boxel 3D","text":"<p>Boxel 3D is a physics-based game built with Three.js for rendering and Matter.js for physics. Modding the game allows you to modify mechanics, add new features, or change visuals to create a custom experience.</p>"},{"location":"gettingstarted/#first-steps-to-modding","title":"First Steps to Modding","text":""},{"location":"gettingstarted/#1-think-of-an-idea","title":"1. Think of an Idea","text":"<p>Before diving into code, decide what you want to change. Do you want to add a new movement type, or modify physics? Having a clear goal helps guide your modifications.</p>"},{"location":"gettingstarted/#2-learn-javascript","title":"2. Learn JavaScript","text":"<p>Since Boxel 3D is built using JavaScript, you need to understand its syntax and concepts, such as:  </p> <ul> <li>Variables, functions, and objects  </li> <li>Basic DOM manipulation  </li> <li>Understanding Three.js (for rendering) and Matter.js (for physics)  </li> </ul>"},{"location":"gettingstarted/#3-use-a-code-editor","title":"3. Use a Code Editor","text":"<p>To write and edit JavaScript code, use a text editor like:  </p> <p>Recommended Code Editors</p> <ul> <li>Visual Studio Code \u2013 A powerful editor with extensions and debugging tools.  </li> <li>Notepad++ \u2013 A lightweight option with syntax highlighting.  </li> </ul>"},{"location":"gettingstarted/#4-access-the-game-console","title":"4. Access the Game Console","text":"<p>Boxel 3D runs in a web browser, so you can use the built-in developer console to test changes.  </p>"},{"location":"gettingstarted/#steps-to-open-the-console","title":"Steps to Open the Console:","text":"<ol> <li>Open the game in a browser.  </li> <li>Look at the introduction page and see \"Commands\" for steps on how to open the console.</li> <li>Navigate to the Console tab to enter JavaScript commands.  </li> </ol> <p>Once you're comfortable with these basics, you can start modifying game elements by injecting custom scripts or editing local copies of the game files.  </p> <p>\ud83d\ude80 Next Steps: Experiment with JavaScript commands in the console to manipulate game elements in real time!</p>"},{"location":"gettingstarted/#event-list","title":"Event List","text":"<p>This part of the page lists all of the events from Boxel 3D.</p>"},{"location":"gettingstarted/#general-events","title":"General Events","text":"Event Name Detail Type Description <code>beforeSettingsClosed</code> <code>{}</code> Triggered before settings are closed. <code>closePopup</code> <code>{}</code> Fires when a popup is closed. <code>levelStart</code> <code>{ detail: Object }</code> Called when a level starts. <code>levelFinished</code> <code>{ detail: Object }</code> Triggered when a level is completed. <code>openLevelSelectorPopup</code> <code>{}</code> Fires when the level selector popup opens. <code>openPopup</code> <code>{ detail: Object }</code> Called when a popup is opened. <code>pageMounted</code> <code>{ detail: String }</code> Fired when a page is mounted. <code>popupClosed</code> <code>{}</code> Triggered when a popup is closed. <code>popupOpened</code> <code>{}</code> Fires when a popup is opened."},{"location":"gettingstarted/#player-events","title":"Player Events","text":"Event Name Detail Type Description <code>playerKill</code> <code>{ detail: { player: Object } }</code> Triggered when a player is killed. <code>playerRespawn</code> <code>{ detail: { player: Object } }</code> Fires when a player respawns. <code>playerRestart</code> <code>{ detail: { player: Object } }</code> Called when a player restarts."},{"location":"gettingstarted/#ui-settings-events","title":"UI &amp; Settings Events","text":"Event Name Detail Type Description <code>setCredit</code> <code>{ detail: { text: String } }</code> Updates credit text. <code>setMode</code> <code>{ detail: String }</code> Sets the current game mode. <code>setPage</code> <code>{ detail: String }</code> Changes the current page. <code>setSelectedObject</code> <code>{ detail: Object }</code> Sets the selected object in the UI. <code>setSelectedMode</code> <code>{ detail: String }</code> Changes the selected mode. <code>setTheme</code> <code>{ detail: String }</code> Sets the game theme. <code>settingsClosed</code> <code>{}</code> Fires when the settings menu is closed. <code>settingsOpened</code> <code>{}</code> Fires when the settings menu is opened. <code>themeSelected</code> <code>{ detail: Object }</code> Triggered when a theme is selected. <code>updateLoading</code> <code>{ detail: Object }</code> Updates the loading state. <code>updateStatsVisibility</code> <code>{}</code> Updates the visibility of stats. <p>\ud83d\ude80 Usage Example: To listen for an event in Boxel 3D, use JavaScript like this:</p>"},{"location":"gettingstarted/#simple-respawn-mod","title":"Simple respawn mod","text":"<pre><code>window.addEventListener(\"playerRespawn\", (event) =&gt; {\n    console.log(\"Player respawned:\", event.detail.player);\n});\n</code></pre> What does this do? <p>This mod listens to when the player respawns. If the player respawns, the console logs \"Player respawned\"</p>"}]}